{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "hero-02",
  "type": "registry:block",
  "description": "A simple hero photo gallery section",
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "registry/default/blocks/hero/hero-02/page.tsx",
      "content": "/* eslint-disable @typescript-eslint/no-explicit-any */\n\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { motion, Variants } from \"framer-motion\"\n\nimport { Photo } from \"@/registry/default/blocks/hero/hero-02/components//gallery\"\nimport { GridPattern } from \"@/registry/default/ui/backgrounds/grid-pattern\"\nimport { Button } from \"@/registry/default/ui/button\"\n\ntype Direction = \"left\" | \"right\"\n\nexport default function PhotoGallery({\n  animationDelay = 0.5,\n}: {\n  animationDelay?: number\n}) {\n  const [isVisible, setIsVisible] = useState(false)\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  useEffect(() => {\n    // First make the container visible with a fade-in\n    const visibilityTimer = setTimeout(() => {\n      setIsVisible(true)\n    }, animationDelay * 1000)\n\n    // Then start the photo animations after a short delay\n    const animationTimer = setTimeout(\n      () => {\n        setIsLoaded(true)\n      },\n      (animationDelay + 0.4) * 1000\n    ) // Add 0.4s for the opacity transition\n\n    return () => {\n      clearTimeout(visibilityTimer)\n      clearTimeout(animationTimer)\n    }\n  }, [animationDelay])\n\n  // Animation variants for the container\n  const containerVariants = {\n    hidden: { opacity: 1 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.15,\n        delayChildren: 0.1, // Reduced from 0.3 to 0.1 since we already have the fade-in delay\n      },\n    },\n  }\n\n  // Animation variants for each photo\n  const photoVariants: Variants = {\n    hidden: () => ({\n      x: 0,\n      y: 0,\n      rotate: 0,\n      scale: 1,\n    }),\n    visible: (custom: {\n      x: number | string\n      y: number | string\n      order: number\n    }) => ({\n      x: custom.x,\n      y: custom.y,\n      rotate: 0,\n      scale: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 70,\n        damping: 12,\n        mass: 1,\n        delay: custom.order * 0.15,\n      },\n    }),\n  }\n\n  // Photo positions - horizontal layout with random y offsets\n  const photos = [\n    {\n      id: 1,\n      order: 0,\n      x: \"-320px\",\n      y: \"15px\",\n      zIndex: 50, // Highest z-index (on top)\n      direction: \"left\" as Direction,\n      src: \"https://images.pexels.com/photos/33600936/pexels-photo-33600936.jpeg\",\n    },\n    {\n      id: 2,\n      order: 1,\n      x: \"-160px\",\n      y: \"32px\",\n      zIndex: 40,\n      direction: \"left\" as Direction,\n      src: \"https://images.pexels.com/photos/31596551/pexels-photo-31596551/free-photo-of-winter-scene-with-lake-view-in-van-turkiye.jpeg\",\n    },\n    {\n      id: 3,\n      order: 2,\n      x: \"0px\",\n      y: \"8px\",\n      zIndex: 30,\n      direction: \"right\" as Direction,\n      src: \"https://images.pexels.com/photos/15526696/pexels-photo-15526696.jpeg\",\n    },\n    {\n      id: 4,\n      order: 3,\n      x: \"160px\",\n      y: \"22px\",\n      zIndex: 20,\n      direction: \"right\" as Direction,\n      src: \"https://images.pexels.com/photos/19936068/pexels-photo-19936068/free-photo-of-women-sitting-on-hilltop-with-clouds-below.jpeg\",\n    },\n    {\n      id: 5,\n      order: 4,\n      x: \"320px\",\n      y: \"44px\",\n      zIndex: 10, // Lowest z-index (at bottom)\n      direction: \"left\" as Direction,\n      src: \"https://images.pexels.com/photos/20494995/pexels-photo-20494995/free-photo-of-head-of-peacock.jpeg\",\n    },\n  ]\n\n  return (\n    <div className=\"relative flex min-h-svh w-full flex-col items-center justify-center overflow-y-auto\">\n      <GridPattern\n        className=\"absolute inset-0 h-full w-full [mask-image:radial-gradient(900px_circle_at_center,transparent,white)]\"\n        width={100}\n        height={10}\n      />\n      <p className=\"lg:text-md my-2 text-center text-xs font-light tracking-widest text-slate-600 uppercase dark:text-slate-400\">\n        A Journey Through Visual Stories\n      </p>\n      <h3 className=\"z-20 mx-auto max-w-2xl justify-center py-3 text-center text-4xl md:text-7xl\">\n        Welcome to My <span className=\"text-rose-500\"> Stories</span>\n      </h3>\n      <div className=\"relative mb-8 h-[350px] w-full items-center justify-center lg:flex\">\n        <motion.div\n          className=\"relative mx-auto flex w-full max-w-7xl justify-center\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: isVisible ? 1 : 0 }}\n          transition={{ duration: 0.4, ease: \"easeOut\" }}\n        >\n          <motion.div\n            className=\"relative flex w-full justify-center\"\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate={isLoaded ? \"visible\" : \"hidden\"}\n          >\n            <div className=\"relative h-[220px] w-[220px]\">\n              {/* Render photos in reverse order so that higher z-index photos are rendered later in the DOM */}\n              {[...photos].reverse().map((photo) => (\n                <motion.div\n                  key={photo.id}\n                  className=\"absolute top-0 left-0\"\n                  style={{ zIndex: photo.zIndex }} // Apply z-index directly in style\n                  variants={photoVariants}\n                  custom={{\n                    x: photo.x,\n                    y: photo.y,\n                    order: photo.order,\n                  }}\n                >\n                  <Photo\n                    width={220}\n                    height={220}\n                    src={photo.src}\n                    alt=\"Photo\"\n                    direction={photo.direction}\n                  />\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        </motion.div>\n      </div>\n      <div className=\"flex w-full justify-center\">\n        <Button className=\"cursor-pointer\">View All Stories</Button>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:page",
      "target": "app/hero-02/page.tsx"
    },
    {
      "path": "registry/default/blocks/hero/hero-02/components/gallery.tsx",
      "content": "/* eslint-disable @typescript-eslint/no-explicit-any */\n\"use client\"\n\nimport { forwardRef, Ref, useEffect, useState } from \"react\"\nimport Image, { ImageProps } from \"next/image\"\nimport { motion, useMotionValue } from \"framer-motion\"\n\nimport { cn } from \"@/registry/default/lib/utils\"\n\nfunction getRandomNumberInRange(min: number, max: number): number {\n  if (min >= max) {\n    throw new Error(\"Min value should be less than max value\")\n  }\n  return Math.random() * (max - min) + min\n}\n\nconst MotionImage = motion(\n  forwardRef(function MotionImage(\n    props: ImageProps,\n    ref: Ref<HTMLImageElement>\n  ) {\n    // eslint-disable-next-line jsx-a11y/alt-text\n    return <Image ref={ref} {...props} />\n  })\n)\n\ntype Direction = \"left\" | \"right\"\n\nexport const Photo = ({\n  src,\n  alt,\n  className,\n  direction,\n  width,\n  height,\n  ...props\n}: {\n  src: string\n  alt: string\n  className?: string\n  direction?: Direction\n  width: number\n  height: number\n}) => {\n  const [rotation, setRotation] = useState<number>(0)\n  const x = useMotionValue(200)\n  const y = useMotionValue(200)\n\n  useEffect(() => {\n    const randomRotation =\n      getRandomNumberInRange(1, 4) * (direction === \"left\" ? -1 : 1)\n    setRotation(randomRotation)\n  }, [])\n\n  function handleMouse(event: {\n    currentTarget: { getBoundingClientRect: () => any }\n    clientX: number\n    clientY: number\n  }) {\n    const rect = event.currentTarget.getBoundingClientRect()\n    x.set(event.clientX - rect.left)\n    y.set(event.clientY - rect.top)\n  }\n\n  const resetMouse = () => {\n    x.set(200)\n    y.set(200)\n  }\n\n  return (\n    <motion.div\n      drag\n      dragConstraints={{ left: 0, right: 0, top: 0, bottom: 0 }}\n      whileTap={{ scale: 1.2, zIndex: 9999 }}\n      whileHover={{\n        scale: 1.1,\n        rotateZ: 2 * (direction === \"left\" ? -1 : 1),\n        zIndex: 9999,\n      }}\n      whileDrag={{\n        scale: 1.1,\n        zIndex: 9999,\n      }}\n      initial={{ rotate: 0 }}\n      animate={{ rotate: rotation }}\n      style={{\n        width,\n        height,\n        perspective: 400,\n        transform: `rotate(0deg) rotateX(0deg) rotateY(0deg)`,\n        zIndex: 1,\n        WebkitTouchCallout: \"none\",\n        WebkitUserSelect: \"none\",\n        userSelect: \"none\",\n        touchAction: \"none\",\n      }}\n      className={cn(\n        className,\n        \"relative mx-auto shrink-0 cursor-grab active:cursor-grabbing\"\n      )}\n      onMouseMove={handleMouse}\n      onMouseLeave={resetMouse}\n      draggable={false}\n      tabIndex={0}\n    >\n      <div className=\"relative h-full w-full overflow-hidden rounded-3xl shadow-sm\">\n        <MotionImage\n          className={cn(\"rounded-3xl object-cover\")}\n          fill\n          src={src}\n          alt={alt}\n          {...props}\n          draggable={false}\n        />\n      </div>\n    </motion.div>\n  )\n}\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "banner",
    "hero"
  ]
}