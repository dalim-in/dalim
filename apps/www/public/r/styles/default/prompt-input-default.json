{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "prompt-input-default",
  "type": "registry:example",
  "registryDependencies": [
    "prompt-input",
    "ai"
  ],
  "files": [
    {
      "path": "registry/default/examples/ai/prompt-input-default.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { GlobeIcon, MicIcon } from \"lucide-react\"\n\nimport {\n  PromptInput,\n  PromptInputButton,\n  PromptInputModelSelect,\n  PromptInputModelSelectContent,\n  PromptInputModelSelectItem,\n  PromptInputModelSelectTrigger,\n  PromptInputModelSelectValue,\n  PromptInputSubmit,\n  PromptInputTextarea,\n  PromptInputToolbar,\n  PromptInputTools,\n} from \"@/registry/default/ui/ai/prompt-input\"\n\nconst models = [\n  { id: \"gpt-4o\", name: \"GPT-4o\" },\n  { id: \"claude-opus-4-20250514\", name: \"Claude 4 Opus\" },\n]\n\nexport default function PromptInputDemo() {\n  const [text, setText] = useState(\"\")\n  const [model, setModel] = useState(models[0].id)\n  const [status, setStatus] = useState<\"ready\" | \"streaming\">(\"ready\")\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    if (!text.trim()) return\n\n    setStatus(\"streaming\")\n    // Fake async send\n    setTimeout(() => {\n      console.log(\"Submitted:\", { text, model })\n      setText(\"\")\n      setStatus(\"ready\")\n    }, 1200)\n  }\n\n  return (\n    <div className=\"flex h-full w-full items-center justify-center\">\n      <div className=\"mx-auto w-full max-w-xl\">\n        <PromptInput onSubmit={handleSubmit} className=\"relative w-full\">\n          {/* Textarea */}\n          <PromptInputTextarea\n            value={text}\n            onChange={(e) => setText(e.currentTarget.value)}\n            placeholder=\"Type your message...\"\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault()\n                if (text.trim()) {\n                  handleSubmit(e as any)\n                }\n              }\n            }}\n          />\n\n          {/* Toolbar */}\n          <PromptInputToolbar>\n            <PromptInputTools>\n              <PromptInputButton type=\"button\">\n                <MicIcon size={16} />\n              </PromptInputButton>\n              <PromptInputButton type=\"button\">\n                <GlobeIcon size={16} />\n                <span>Search</span>\n              </PromptInputButton>\n              <PromptInputModelSelect\n                value={model}\n                onValueChange={(v) => setModel(v)}\n              >\n                <PromptInputModelSelectTrigger>\n                  <PromptInputModelSelectValue />\n                </PromptInputModelSelectTrigger>\n                <PromptInputModelSelectContent>\n                  {models.map((m) => (\n                    <PromptInputModelSelectItem key={m.id} value={m.id}>\n                      {m.name}\n                    </PromptInputModelSelectItem>\n                  ))}\n                </PromptInputModelSelectContent>\n              </PromptInputModelSelect>\n            </PromptInputTools>\n\n            <PromptInputSubmit\n              disabled={!text.trim() || status === \"streaming\"}\n              status={status}\n            />\n          </PromptInputToolbar>\n        </PromptInput>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:example"
    }
  ]
}