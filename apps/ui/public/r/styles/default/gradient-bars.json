{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "gradient-bars",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/default/ui/backgrounds/gradient-bars.tsx",
      "content": "\"use client\"\n\nimport React from \"react\"\n\nimport { cn } from \"@/registry/default/lib/utils\"\n\ninterface GradientBarsProps {\n  className?: string\n  color?: string\n  numBars?: number\n}\n\nexport const GradientBars = ({\n  className,\n  color = \"#fff200\",\n  numBars = 15,\n}: GradientBarsProps) => {\n  const calculateHeight = (index: number, total: number) => {\n    const position = index / (total - 1)\n    const maxHeight = 100\n    const minHeight = 20\n    const center = 0.5\n    const distanceFromCenter = Math.abs(position - center)\n    const heightPercentage = Math.pow(distanceFromCenter * 2, 2)\n\n    return minHeight + (maxHeight - minHeight) * heightPercentage\n  }\n\n  return (\n    <div className={cn(\"absolute inset-0 overflow-hidden\", className)}>\n      <div className=\"flex h-full w-full\">\n        {Array.from({ length: numBars }).map((_, index) => {\n          const height = calculateHeight(index, numBars)\n          return (\n            <div\n              key={index}\n              style={{\n                flex: `1 0 calc(100% / ${numBars})`,\n                maxWidth: `calc(100% / ${numBars})`,\n                height: \"100%\",\n                background: `linear-gradient(to top, ${color}, transparent)`,\n                transform: `scaleY(${height / 100})`,\n                transformOrigin: \"bottom\",\n                transition: \"transform 0.5s ease-in-out\",\n                animation: \"pulseBar 2s ease-in-out infinite alternate\",\n                animationDelay: `${index * 0.1}s`,\n                outline: \"2px solid rgba(0, 0, 0, 0)\",\n                boxSizing: \"border-box\",\n              }}\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:ui"
    }
  ]
}