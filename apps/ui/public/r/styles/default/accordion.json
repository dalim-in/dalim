{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-accordion"
  ],
  "files": [
    {
      "path": "registry/default/ui/accordion.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { ChevronDownIcon } from \"lucide-react\"\n\nimport { cn } from \"@/registry/default/lib/utils\"\n\nconst accordionVariants = cva(\"border-b\", {\n  variants: {\n    variant: {\n      default: \"border-border last:border-b-0\",\n      ghost: \"border-transparent\",\n      outline: \"border-2 border-border rounded-lg mb-2 last:mb-0\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n})\n\nconst accordionTriggerVariants = cva(\n  \"focus-visible:border-ring focus-visible:ring-ring/50 flex flex-1 items-start justify-between gap-4 rounded-md text-left font-medium transition-all outline-none focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 [&[data-state=open]>svg]:rotate-180\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:underline\",\n        ghost: \"hover:bg-muted/50 px-6\",\n        outline: \"hover:bg-muted/30 px-6\",\n      },\n      size: {\n        sm: \"py-2 text-sm\",\n        md: \"py-4 text-sm\",\n        lg: \"py-6 text-base\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  }\n)\n\nconst accordionContentVariants = cva(\n  \"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default: \"\",\n        ghost: \"\",\n        outline: \"\",\n      },\n      size: {\n        sm: \"text-xs\",\n        md: \"text-sm\",\n        lg: \"text-base\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  }\n)\n\nfunction Accordion({\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Root>) {\n  return <AccordionPrimitive.Root data-slot=\"accordion\" {...props} />\n}\n\ninterface AccordionItemProps\n  extends React.ComponentProps<typeof AccordionPrimitive.Item>,\n    VariantProps<typeof accordionVariants> {}\n\nfunction AccordionItem({ className, variant, ...props }: AccordionItemProps) {\n  return (\n    <AccordionPrimitive.Item\n      data-slot=\"accordion-item\"\n      className={cn(accordionVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\ninterface AccordionTriggerProps\n  extends React.ComponentProps<typeof AccordionPrimitive.Trigger>,\n    VariantProps<typeof accordionTriggerVariants> {}\n\nfunction AccordionTrigger({\n  className,\n  children,\n  variant,\n  size,\n  ...props\n}: AccordionTriggerProps) {\n  return (\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        data-slot=\"accordion-trigger\"\n        className={cn(accordionTriggerVariants({ variant, size }), className)}\n        {...props}\n      >\n        {children}\n        <ChevronDownIcon\n          className={cn(\n            \"text-muted-foreground pointer-events-none h-4 w-4 shrink-0 translate-y-0.5 transition-transform duration-200\"\n          )}\n        />{\" \"}\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  )\n}\n\ninterface AccordionContentProps\n  extends React.ComponentProps<typeof AccordionPrimitive.Content>,\n    VariantProps<typeof accordionContentVariants> {}\n\nfunction AccordionContent({\n  className,\n  children,\n  variant,\n  size,\n  ...props\n}: AccordionContentProps) {\n  return (\n    <AccordionPrimitive.Content\n      data-slot=\"accordion-content\"\n      className={cn(accordionContentVariants({ size, variant }))}\n      {...props}\n    >\n      <div className={cn(\"pt-0 pb-4\", className)}>\n        <div\n          className={cn(\n            size === \"sm\" && \"pt-0 pb-2\",\n            size === \"md\" && \"pt-0 pb-4\",\n            size === \"lg\" && \"pt-0 pb-6\",\n            variant === \"default\" && \" \",\n            variant === \"ghost\" && \"px-6 pt-3\",\n            variant === \"outline\" && \"px-6 pt-3\",\n            className\n          )}\n        >\n          {children}\n        </div>\n      </div>\n    </AccordionPrimitive.Content>\n  )\n}\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n",
      "type": "registry:ui"
    }
  ]
}