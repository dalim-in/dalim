{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-progress",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/default/ui/backgrounds/scroll-progress.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport {\n  motion,\n  useMotionValueEvent,\n  useScroll,\n  useSpring,\n} from \"framer-motion\"\n\nimport { cn } from \"@/registry/default/lib/utils\"\n\nconst scrollProgressVariants = cva(\"fixed z-30 origin-left\", {\n  variants: {\n    variant: {\n      default: \"bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500\",\n      rainbow:\n        \"bg-gradient-to-r from-red-500 via-yellow-500 via-green-500 via-blue-500 to-purple-500\",\n      ocean: \"bg-gradient-to-r from-cyan-400 via-blue-500 to-blue-600\",\n      sunset: \"bg-gradient-to-r from-orange-400 via-red-500 to-pink-500\",\n      forest: \"bg-gradient-to-r from-green-400 via-emerald-500 to-teal-500\",\n      monochrome: \"bg-gradient-to-r from-gray-600 via-gray-800 to-black\",\n      neon: \"bg-gradient-to-r from-pink-500 via-purple-500 to-indigo-500\",\n      fire: \"bg-gradient-to-r from-yellow-400 via-orange-500 to-red-600\",\n      ice: \"bg-gradient-to-r from-blue-200 via-cyan-300 to-blue-400\",\n      gold: \"bg-gradient-to-r from-yellow-300 via-yellow-500 to-yellow-600\",\n      solid: \"bg-blue-500\",\n      custom: \"\", // For custom gradients\n    },\n    size: {\n      xs: \"h-0.5\",\n      sm: \"h-1\",\n      default: \"h-1.5\",\n      lg: \"h-2\",\n      xl: \"h-3\",\n      \"2xl\": \"h-4\",\n    },\n    position: {\n      top: \"inset-x-0 top-0\",\n      bottom: \"inset-x-0 bottom-0\",\n    },\n    rounded: {\n      none: \"\",\n      sm: \"rounded-sm\",\n      default: \"rounded\",\n      lg: \"rounded-lg\",\n      xl: \"rounded-xl\",\n      full: \"rounded-full\",\n    },\n    glow: {\n      none: \"\",\n      sm: \"shadow-sm\",\n      default: \"shadow-md\",\n      lg: \"shadow-lg drop-shadow-lg\",\n      xl: \"shadow-xl drop-shadow-xl\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"default\",\n    position: \"top\",\n    rounded: \"none\",\n    glow: \"none\",\n  },\n})\n\ninterface ScrollProgressProps\n  extends VariantProps<typeof scrollProgressVariants> {\n  className?: string\n  customGradient?: string\n  springConfig?: {\n    stiffness?: number\n    damping?: number\n    restDelta?: number\n  }\n  showPercentage?: boolean\n  percentagePosition?: \"left\" | \"right\" | \"center\"\n  container?: React.RefObject<HTMLElement>\n}\n\nexport function ScrollProgress({\n  className,\n  variant,\n  size,\n  position,\n  rounded,\n  glow,\n  customGradient,\n  springConfig = {\n    stiffness: 200,\n    damping: 50,\n    restDelta: 0.001,\n  },\n  showPercentage = false,\n  percentagePosition = \"right\",\n  container,\n}: ScrollProgressProps) {\n  const { scrollYProgress } = useScroll(container ? { container } : undefined)\n  const scaleX = useSpring(scrollYProgress, springConfig)\n\n  const [percentage, setPercentage] = useState(0)\n  useMotionValueEvent(scrollYProgress, \"change\", (latest) => {\n    setPercentage(Math.round(latest * 100))\n  })\n\n  const progressBarClasses = cn(\n    scrollProgressVariants({ variant, size, position, rounded, glow }),\n    variant === \"custom\" && customGradient,\n    className\n  )\n\n  const percentageClasses = cn(\n    \"fixed z-40 text-xs font-medium text-foreground bg-background/80 backdrop-blur-sm px-2 py-1 rounded\",\n    position === \"top\" ? \"top-2\" : \"bottom-2\",\n    percentagePosition === \"left\" && \"left-4\",\n    percentagePosition === \"right\" && \"right-4\",\n    percentagePosition === \"center\" && \"left-1/2 -translate-x-1/2\"\n  )\n\n  return (\n    <>\n      <motion.div\n        className={progressBarClasses}\n        style={{\n          scaleX,\n        }}\n      />\n      {showPercentage && (\n        <motion.div\n          className={percentageClasses}\n          style={{\n            opacity: scrollYProgress,\n          }}\n        >\n          <motion.span>{percentage}%</motion.span>\n        </motion.div>\n      )}\n    </>\n  )\n}\n",
      "type": "registry:ui"
    }
  ]
}