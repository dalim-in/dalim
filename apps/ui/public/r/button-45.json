{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-45",
  "type": "registry:component",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/default/components/button/button-45.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Trash2Icon } from \"lucide-react\"\nimport { motion, useAnimation } from \"motion/react\"\n\nimport { cn } from \"@/registry/default/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\n\ninterface BtnProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  holdDuration?: number\n}\n\nexport default function Components({\n  className,\n  holdDuration = 3000,\n  ...props\n}: BtnProps) {\n  const [isHolding, setIsHolding] = useState(false)\n  const controls = useAnimation()\n\n  async function handleHoldStart() {\n    setIsHolding(true)\n    controls.set({ width: \"0%\" })\n    await controls.start({\n      width: \"100%\",\n      transition: {\n        duration: holdDuration / 1000,\n        ease: \"linear\",\n      },\n    })\n  }\n\n  function handleHoldEnd() {\n    setIsHolding(false)\n    controls.stop()\n    controls.start({\n      width: \"0%\",\n      transition: { duration: 0.1 },\n    })\n  }\n\n  return (\n    <Button\n      className={cn(\"relative touch-none overflow-hidden\", \"\", className)}\n      onMouseDown={handleHoldStart}\n      onMouseUp={handleHoldEnd}\n      onMouseLeave={handleHoldEnd}\n      onTouchStart={handleHoldStart}\n      onTouchEnd={handleHoldEnd}\n      onTouchCancel={handleHoldEnd}\n      {...props}\n    >\n      <motion.div\n        initial={{ width: \"0%\" }}\n        animate={controls}\n        className=\"bg-destructive absolute top-0 left-0 h-full\"\n      />\n      <span className=\"relative z-10 flex w-full items-center justify-center gap-2\">\n        <Trash2Icon className=\"h-4 w-4\" />\n        {!isHolding ? \"Hold me\" : \"Release\"}\n      </span>\n    </Button>\n  )\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "button",
      "example",
      "component"
    ],
    "style": 1
  }
}