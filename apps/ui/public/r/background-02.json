{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "background-02",
  "type": "registry:component",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/default/components/background/background-02.tsx",
      "content": "\"use client\"\n\nimport { useId } from \"react\"\n\nimport { cn } from \"@/registry/default/lib/utils\"\n\nexport default function Component() {\n  return (\n    <div className=\"bg-background relative flex h-[650px] w-full flex-col items-center justify-center overflow-hidden rounded-xl border\">\n      <p className=\"z-10 text-center text-3xl font-semibold tracking-tighter whitespace-pre-wrap text-black md:text-7xl dark:text-white\">\n        Grid Pattern\n      </p>\n      <GridPattern\n        strokeDasharray=\"1\"\n        width={100}\n        height={10}\n        className={cn(\n          \"[mask-image:radial-gradient(650px_circle_at_center,white,transparent)]\"\n        )}\n      />\n    </div>\n  )\n}\n\ninterface GridPatternProps {\n  width?: number\n  height?: number\n  x?: number\n  y?: number\n  squares?: Array<[x: number, y: number]>\n  strokeDasharray?: string\n  className?: string\n  [key: string]: unknown\n}\n\nexport function GridPattern({\n  width = 32,\n  height = 32,\n  x = -1,\n  y = -1,\n  strokeDasharray = \"0\",\n  squares,\n  className,\n  ...props\n}: GridPatternProps) {\n  const id = useId()\n\n  return (\n    <svg\n      aria-hidden=\"true\"\n      className={cn(\n        \"pointer-events-none absolute inset-0 h-full w-full fill-gray-400/30 stroke-gray-400/30\",\n        className\n      )}\n      {...props}\n    >\n      <defs>\n        <pattern\n          id={id}\n          width={width}\n          height={height}\n          patternUnits=\"userSpaceOnUse\"\n          x={x}\n          y={y}\n        >\n          <path\n            d={`M.5 ${height}V.5H${width}`}\n            fill=\"none\"\n            strokeDasharray={strokeDasharray}\n          />\n        </pattern>\n      </defs>\n      <rect width=\"100%\" height=\"100%\" strokeWidth={0} fill={`url(#${id})`} />\n      {squares && (\n        <svg x={x} y={y} className=\"overflow-visible\">\n          {squares.map(([x, y]) => (\n            <rect\n              strokeWidth=\"0\"\n              key={`${x}-${y}`}\n              width={width - 1}\n              height={height - 1}\n              x={x * width + 1}\n              y={y * height + 1}\n            />\n          ))}\n        </svg>\n      )}\n    </svg>\n  )\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "background",
      "bg",
      "texture",
      "pattern"
    ],
    "style": 1,
    "colSpan": 3
  }
}