{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cursor",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/default/ui/cursor.tsx",
      "content": "\"use client\"\n\nimport type React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { cn } from \"@/registry/default/lib/utils\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nexport const cursorVariants = cva(\"fixed pointer-events-none z-50 transition-all duration-200 ease-out\", {\n  variants: {\n    variant: {\n      default: \"w-4 h-4 bg-black rounded-full\",\n      pointer: \"w-6 h-6 bg-blue-500 rounded-full scale-125\",\n      text: \"w-0.5 h-6 bg-black\",\n      loading: \"w-6 h-6 border-2 border-gray-300 border-t-blue-500 rounded-full\",\n      crosshair: \"w-8 h-8 border border-red-500 bg-transparent\",\n      grab: \"w-5 h-5 bg-green-500 rounded-full\",\n      grabbing: \"w-4 h-4 bg-green-600 rounded-full scale-90\",\n      help: \"w-6 h-6 bg-purple-500 rounded-full relative before:content-['?'] before:absolute before:inset-0 before:flex before:items-center before:justify-center before:text-white before:text-xs before:font-bold\",\n      wait: \"w-6 h-6 bg-orange-500 rounded-sm rotate-45\",\n      \"not-allowed\": \"w-6 h-6 bg-red-500 rounded-full relative before:content-[''] before:absolute before:inset-1 before:border-2 before:border-white before:rounded-full before:bg-transparent\",\n      \"zoom-in\": \"w-7 h-7 bg-teal-500 rounded-full relative before:content-['+'] before:absolute before:inset-0 before:flex before:items-center before:justify-center before:text-white before:text-sm before:font-bold\",\n      \"zoom-out\": \"w-7 h-7 bg-teal-600 rounded-full relative before:content-['−'] before:absolute before:inset-0 before:flex before:items-center before:justify-center before:text-white before:text-sm before:font-bold\",\n      \"n-resize\": \"w-2 h-8 bg-indigo-500 rounded-full\",\n      \"s-resize\": \"w-2 h-8 bg-indigo-500 rounded-full\",\n      \"e-resize\": \"w-8 h-2 bg-indigo-500 rounded-full\",\n      \"w-resize\": \"w-8 h-2 bg-indigo-500 rounded-full\",\n      \"ne-resize\": \"w-6 h-6 bg-indigo-500 transform rotate-45\",\n      \"nw-resize\": \"w-6 h-6 bg-indigo-500 transform -rotate-45\",\n      \"se-resize\": \"w-6 h-6 bg-indigo-500 transform -rotate-45\",\n      \"sw-resize\": \"w-6 h-6 bg-indigo-500 transform rotate-45\",\n      move: \"w-6 h-6 bg-yellow-500 relative before:content-['✛'] before:absolute before:inset-0 before:flex before:items-center before:justify-center before:text-white before:text-xs\",\n      copy: \"w-6 h-6 bg-cyan-500 rounded relative before:content-['⧉'] before:absolute before:inset-0 before:flex before:items-center before:justify-center before:text-white before:text-xs\",\n      alias: \"w-6 h-6 bg-pink-500 rounded relative before:content-['↗'] before:absolute before:inset-0 before:flex before:items-center before:justify-center before:text-white before:text-sm\",\n      \"context-menu\": \"w-5 h-7 bg-gray-600 rounded-sm relative before:content-['⋮'] before:absolute before:inset-0 before:flex before:items-center before:justify-center before:text-white before:text-xs\",\n      cell: \"w-6 h-6 border-2 border-emerald-500 bg-transparent\",\n      \"vertical-text\": \"w-6 h-1 bg-black\",\n      \"no-drop\": \"w-6 h-6 bg-red-600 rounded-full relative before:content-['⊘'] before:absolute before:inset-0 before:flex before:items-center before:justify-center before:text-white before:text-sm\",\n      progress: \"w-8 h-2 bg-blue-200 rounded-full relative before:content-[''] before:absolute before:left-0 before:top-0 before:h-full before:w-1/3 before:bg-blue-500 before:rounded-full\",\n      none: \"hidden\",\n    },\n    size: {\n      sm: \"scale-75\",\n      md: \"scale-100\",\n      lg: \"scale-125\",\n      xl: \"scale-150\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"md\",\n  },\n})\n\ninterface CursorProps extends VariantProps<typeof cursorVariants> {\n  className?: string\n  children?: React.ReactNode\n  hideDefaultCursor?: boolean\n  followMouse?: boolean\n  offset?: { x: number; y: number }\n}\n\nexport function Cursor({\n  variant,\n  size,\n  className,\n  children,\n  hideDefaultCursor = true,\n  followMouse = true,\n  offset = { x: 0, y: 0 },\n  ...props\n}: CursorProps) {\n  const [position, setPosition] = useState({ x: 0, y: 0 })\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    if (!followMouse) return\n\n    const updatePosition = (e: MouseEvent) => {\n      setPosition({\n        x: e.clientX + offset.x,\n        y: e.clientY + offset.y,\n      })\n    }\n\n    const handleMouseEnter = () => setIsVisible(true)\n    const handleMouseLeave = () => setIsVisible(false)\n\n    document.addEventListener(\"mousemove\", updatePosition)\n    document.addEventListener(\"mouseenter\", handleMouseEnter)\n    document.addEventListener(\"mouseleave\", handleMouseLeave)\n\n    return () => {\n      document.removeEventListener(\"mousemove\", updatePosition)\n      document.removeEventListener(\"mouseenter\", handleMouseEnter)\n      document.removeEventListener(\"mouseleave\", handleMouseLeave)\n    }\n  }, [followMouse, offset.x, offset.y])\n\n  useEffect(() => {\n    if (hideDefaultCursor) {\n      document.body.style.cursor = \"none\"\n      return () => {\n        document.body.style.cursor = \"auto\"\n      }\n    }\n  }, [hideDefaultCursor])\n\n  if (!followMouse) {\n    return (\n      <div className={cn(cursorVariants({ variant, size }), className)} {...props}>\n        {children}\n      </div>\n    )\n  }\n\n  return (\n    <div\n      className={cn(cursorVariants({ variant, size }), !isVisible && \"opacity-0\", className)}\n      style={{\n        left: position.x,\n        top: position.y,\n        transform: \"translate(-50%, -50%)\",\n      }}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\n\n// Hook for cursor state management\nexport function useCursor() {\n  const [cursorVariant, setCursorVariant] = useState<VariantProps<typeof cursorVariants>[\"variant\"]>(\"default\")\n  const [cursorSize, setCursorSize] = useState<VariantProps<typeof cursorVariants>[\"size\"]>(\"md\")\n\n  return {\n    cursorVariant,\n    cursorSize,\n    setCursorVariant,\n    setCursorSize,\n  }\n}\n",
      "type": "registry:ui"
    }
  ]
}